akka {

  persistence.journal.plugin = "akka.persistence.journal.leveldb"
  persistence.journal.leveldb.dir = "journal"

  # options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "INFO"

  actor {
    provider = "cluster"

    serializers {
      experiment = "ada.experiment.ExperimentMessageSerializer"
      my-payload = "ada.vcs.domain.dvc.entities.Sum$SumMessageSerializer"
      dvc = "ada.vcs.domain.dvc.protocol.serializers.DataVersionControlSerializer"
      namespace = "ada.vcs.domain.dvc.protocol.serializers.NamespaceMessageSerializer"
      repository = "ada.vcs.domain.dvc.protocol.serializers.RepositoryMessageSerializer"
      resource-registry = "ada.vcs.domain.dvc.services.registry.ResourceRegistrySerializer"
      values = "ada.vcs.domain.dvc.values.ValuesSerializer"
    }

    serialization-bindings {
      "ada.commons.util.FQResourceName" = values
      "ada.commons.util.ResourcePath" = values

      "ada.experiment.CounterCommand" = experiment

      "ada.vcs.domain.dvc.entities.Sum$Event" = my-payload

      "ada.vcs.domain.dvc.protocol.api.DataVersionControlEvent" = dvc
      "ada.vcs.domain.dvc.protocol.api.NamespaceEvent" = namespace
      "ada.vcs.domain.dvc.protocol.api.NamespaceMessage" = namespace
      "ada.vcs.domain.dvc.protocol.api.ValueObject" = values
      "ada.vcs.domain.dvc.protocol.api.RepositoryEvent" = repository
      "ada.vcs.domain.dvc.protocol.api.RepositoryMessage" = repository

      "ada.vcs.domain.dvc.services.registry.ResourceRegistryCommand" = resource-registry
      "ada.vcs.domain.dvc.services.registry.ResourceRegistryEvent" = resource-registry
    }
  }

  remote {
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://default@127.0.0.1:2551",
      "akka.tcp://default@127.0.0.1:2552"]
  }

}
